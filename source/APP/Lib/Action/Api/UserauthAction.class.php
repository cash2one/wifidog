<?php
//加密方式：php源码混淆类加密。免费版地址:http://www.zhaoyuanma.com/phpjm.html 免费版不能解密,可以使用VIP版本。

//发现了time,请自行验证这套程序是否有时间限制.
//VIP会员:jinguang1983 您好,破解:phpjm加密,本次扣金币:5个,金币余额:60个,感谢您的支持.
//此程序由【找源码】http://Www.ZhaoYuanMa.Com (VIP会员功能）在线逆向还原，QQ：7530782 
?>
<?php
class UserAuthAction extends BaseApiAction{
private  $shop=false;
private  $tplkey="";
public function index(){
}
private  function load_shopinfo(){
if( cookie('gw_id')!=null){
$sql="select a.id,a.gw_id,a.shopid,a.routename,b.shopname,b.authmode,b.trade,b.timelimit ,b.duanxin,b.smscount,b.temptime,b.wxrzfs,b.wxewm,b.pid,b.tpl_path from ".C('DB_PREFIX')."routemap a left join ".C('DB_PREFIX')."shop b on a.shopid=b.id ";
$sql.=" where a.gw_id='".cookie('gw_id')."' limit 1";
$dbmap=D('Routemap');
$info=$dbmap->query($sql);
if($info!=false){
cookie('shopid',$info[0]['id']);
cookie('pid',$info[0]['pid']);
$this->shop=$info;
$this->tplkey=$info[0]['tpl_path'];
$this->assign("shopinfo",$info);
}
$dbmap=null;
}
}
public function wxauth(){
$this->load_shopinfo();
$authmode=$this->shop[0]['authmode'];
$tmp=explode('#',$authmode);
foreach($tmp as $v){
if($v!='#'&&$v!=''){
$arr[]=$v;
}
}
foreach($arr as $v){
$temp=explode('=',$v);
if(count($temp)>1&&$temp[0]=='4'){
$auth['wx']=$temp[1];
break;
}
}
$wx=json_decode($auth['wx']);
$this->assign('wxname',$wx->user);
$this->assign('wxpwd',$wx->pwd);
$this->assign('wxewm',$this->shop[0]['wxewm']);
$this->display();
}
public function wxauthmm(){
$this->load_shopinfo();
$authmode=$this->shop[0]['authmode'];
$tmp=explode('#',$authmode);
foreach($tmp as $v){
if($v!='#'&&$v!=''){
$arr[]=$v;
}
}
foreach($arr as $v){
$temp=explode('=',$v);
if(count($temp)>1&&$temp[0]=='4'){
$auth['wx']=$temp[1];
break;
}
}
$wx=json_decode($auth['wx']);
$uAgent = strtolower($_SERVER['HTTP_USER_AGENT']);
if(strpos($uAgent,"mac")>-1 ||strpos($uAgent,"ios")>-1  ||strpos($uAgent,"iPhone")>-1 ||strpos($uAgent,"iPod")>-1 ||strpos($uAgent,"iPad")>-1)
{
$weixint='1';
}
$this->assign('weixint',$weixint);
$this->assign('wxname',$wx->user);
$this->assign('wxpwd',$wx->pwd);
$this->assign('wxewm',$this->shop[0]['wxewm']);
$this->assign('temptime',$this->shop[0]['temptime']);
$this->display();
}
public function weixin(){
$this->load_shopinfo();
$authmode=$this->shop[0]['authmode'];
$tmp=explode('#',$authmode);
foreach($tmp as $v){
if($v!='#'&&$v!=''){
$arr[]=$v;
}
}
foreach($arr as $v){
$temp=explode('=',$v);
if(count($temp)>1&&$temp[0]=='3'){
$auth['wx']=$temp[1];
break;
}
}
$wx=json_decode($auth['wx']);
$this->assign('wxname',$wx->user);
$this->assign('wxpwd',$wx->pwd);
$this->assign('wxewm',$this->shop[0]['wxewm']);
$this->display();
}
public function indexgreen(){
$this->load_shopinfo();
$authmode=$this->shop[0]['authmode'];
$tmp=explode('#',$authmode);
foreach($tmp as $v){
if($v!='#'&&$v!=''){
$arr[]=$v;
}
}
foreach($arr as $v){
$temp=explode('=',$v);
if(count($temp)>1&&$temp[0]=='3'){
$auth['wx']=$temp[1];
break;
}
if(count($temp)>1&&$temp[0]=='4'){
$auth['wx']=$temp[1];
}
}
$wx=json_decode($auth['wx']);
$uAgent = strtolower($_SERVER['HTTP_USER_AGENT']);
if(strpos($uAgent,"mac")>-1 ||strpos($uAgent,"ios")>-1  ||strpos($uAgent,"iPhone")>-1 ||strpos($uAgent,"iPod")>-1 ||strpos($uAgent,"iPad")>-1)
{
$weixint='1';
}
$this->assign('weixint',$weixint);
$this->assign('wxcode',cookie('wxcode'));
$this->assign('wxrzfs',$this->shop[0]['wxrzfs']);
$this->assign('wxname',$wx->user);
$this->assign('wxpwd',$wx->pwd);
$this->assign('wxewm',$this->shop[0]['wxewm']);
$this->assign('temptime',$this->shop[0]['temptime']);
$this->display();
}
public function doweixin(){
$this->load_shopinfo();
$token=md5(uniqid());
$now=time();
$tranDb=new Model();
$_POST['token']=$token;
$_POST['user']=uniqid();
$_POST['password']=md5('123456');
$_POST['phone']='13666666666';
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['browser']=$this->browser;
$_POST['add_time']=$now;
$_POST['update_time']=$now;
$_POST['mac']=cookie('mac');
$_POST['login_time']=$now;
$_POST['add_date']=getNowDate();
$_POST['mode']='4';
unset($_POST['__hash__']);
unset($_POST['smscode']);
$time=$this->shop[0]['temptime'];
if($time=='0'){
$temptime='0';
}else 
{$temptime=time()+$time*60;
}
$_POST['online_time']=$temptime;
C('TOKEN_ON',false);
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
import("ORG.Util.String");
if($this->shop[0]['wxrzfs']==1){
while(true){
$code=String::randString(6,'1');
$ss['shopid']=$this->shop[0]['shopid'];
$ss['wxcode']=array('eq',$code);
if(D('authlist')->where($ss)->find())
{continue;}else{break;}
}
$arrdata['wxcode']=$code;
cookie('wxcode',$code);
}
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$temptime;
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='4';
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag and $flagauth){
$tranDb->commit();
cookie('token',$token);
cookie('mid',$newid);
$data['url']="http://".cookie('gw_address').":".cookie('gw_port')."/wifidog/auth?token=".cookie('token');
$data['error']=0;
$data['msg']="";
$this->ajaxReturn($data);
}else{
$tranDb->rollback();
Log::write("微信认证错误:".$tranDb->getLastSql());
$data['msg']="认证操作失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}
public function doweixinmm(){
$this->load_shopinfo();
$token=md5(uniqid());
$now=time();
$tranDb=new Model();
$_POST['token']=$token;
$_POST['user']=uniqid();
$_POST['password']=md5('123456');
$_POST['phone']='13666666666';
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['browser']=$this->browser;
$_POST['add_time']=$now;
$_POST['update_time']=$now;
$_POST['mac']=cookie('mac');
$_POST['login_time']=$now;
$_POST['add_date']=getNowDate();
$_POST['mode']='5';
unset($_POST['__hash__']);
unset($_POST['smscode']);
$time=$this->shop[0]['temptime'];
if($time=='0'){
$temptime='0';
}else 
{$temptime=time()+$time*60;
}
$_POST['online_time']=$temptime;
C('TOKEN_ON',false);
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$temptime;
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='5';
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag and $flagauth){
$tranDb->commit();
cookie('token',$token);
cookie('mid',$newid);
$data['url']="http://".cookie('gw_address').":".cookie('gw_port')."/wifidog/auth?token=".cookie('token');
$data['error']=0;
$data['msg']="";
$this->ajaxReturn($data);
}else{
$tranDb->rollback();
Log::write("微信认证错误:".$tranDb->getLastSql());
$data['msg']="认证操作失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}
public function dowxauth(){
$this->load_shopinfo();
$pwd=I('post.password');
if($pwd==""){
$data['msg']="请输入上网认证密码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$authmode=$this->shop[0]['authmode'];
$tmp=explode('#',$authmode);
foreach($tmp as $v){
if($v!='#'&&$v!=''){
$arr[]=$v;
}
}
foreach($arr as $v){
$temp=explode('=',$v);
if(count($temp)>1&&$temp[0]=='4'){
$auth['wx']=$temp[1];
}
}
if(!empty($auth['wx'])){
$wx=json_decode($auth['wx']);
if($pwd!=$wx->pass){
$data['msg']="上网认证密码不正确";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$token=md5(uniqid());
$now=time();
$tranDb=new Model();
$_POST['user']=uniqid();
$_POST['password']=md5('123456');
$_POST['phone']='13888888888';
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['browser']=$this->browser;
$_POST['token']=$token;
$_POST['add_time']=$now;
$_POST['update_time']=$now;
$_POST['mac']=cookie('mac');
$_POST['login_time']=$now;
$_POST['add_date']=getNowDate();
unset($_POST['__hash__']);
unset($_POST['smscode']);
$_POST['mode']='3';
$_POST['online_time']=$this->getLimitTime();
C('TOKEN_ON',false);
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$this->getLimitTime();
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='3';
$arrdata['agent']=$this->agent;
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag&&$flagauth){
$tranDb->commit();
cookie('token',$token);
cookie('mid',$newid);
$data['error']=0;
$data['url']=U("userauth/showtoken");
$this->ajaxReturn($data);
}else{
$tranDb->rollback();
Log::write("微信认证错误:".$tranDb->getLastSql());
$data['msg']="认证操作失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}else{
$data['error']=1;
$data['msg']='认证操作失败,请稍候再试';
$this->ajaxReturn($data);
}
}
public function login(){
$this->load_shopinfo();
if(empty($this->tplkey)||$this->tplkey==""||strtolower($this->tplkey)=="default"){
$this->display();
}else{
$this->display("login$".$this->tplkey);
}
}
public function smslogin(){
if(IS_POST){
$this->load_shopinfo();
$userdb=D('Member');
$user=I('post.user');
$pwd=I('post.smscode');
if(empty($user)||empty($pwd)||$user==""||$pwd==""){
$data['msg']="提交参数不完整，登录失败";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if(!isPhone($user)){
$data['msg']="请填写有效的11位手机号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if($pwd==""||!isSmsCode($pwd)){
$data['msg']="验证码不正确";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$duanxin=substr($this->shopinfo[0]['authmode'],-1);
if($duanxin==0){
$se=cookie('smscode');
$datatime=cookie('datatime');
$nowtime=time();
$phone=cookie('phone88');
if(($nowtime-$datatime>180)){$data['msg']="验证码已过期，请重新获取！";
$data['error']=1;
$this->ajaxReturn($data);
exit;}
if($user!=$phone){
$data['msg']="请输入接收到验证码的手机号!";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if(empty($se)){
$data['msg']="验证码已过期，请重新获取！";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if($se!=$pwd){
$data['msg']="验证码不正确,请重新输入";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
}else{
$whereuser['shopid']=$this->shop[0]['shopid'];
$whereuser['add_date']=getNowDate();
$whereuser['mac']=cookie('mac');
$resu=D('smscount')->where($whereuser)->order('add_time desc')->find();
if($resu){
if((time()-$resu['add_time']>180)){
$data['msg']="验证码已过期，请重新获取！";
$data['error']=1;
$this->ajaxReturn($data);
exit;}
if($user!=$resu['phone']){
$data['msg']="请输入接收到验证码的手机号!";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if($resu['smscode']!=$pwd){
$data['msg']="验证码不正确,请重新输入";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
}else{
$data['msg']="验证失败，请重新获取验证码！";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
}
$where['user']=$user;
$where['routeid']=$this->shop[0]['id'];
$info=$userdb->where($where)->find();
if($info==false){
C('TOKEN_ON',false);
$token=md5(uniqid());
$now=time();
$tranDb=new Model();
$_POST['token']=$token;
$_POST['password']=md5($user);
$_POST['phone']=$user;
$_POST['browser']=$this->browser;
$_POST['mode']='1';
$_POST['add_time']=$now;
$_POST['mac']=cookie('mac');
$_POST['update_time']=$now;
$_POST['login_time']=$now;
$_POST['add_date']=getNowDate();
unset($_POST['__hash__']);
unset($_POST['smscode']);
if($this->shop!=false){
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['online_time']=$this->getLimitTime();
}
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$this->getLimitTime();
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='1';
$arrdata['agent']=$this->agent;
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag&&$flagauth){
$tranDb->commit();
cookie('token',$_POST['token']);
cookie('mid',$newid);
$data['error']=0;
$data['url']=U("userauth/showtoken");
$this->ajaxReturn($data);
}else{
$tranDb->rollback();
Log::write("手机认证错误:".$tranDb->getLastSql());
$data['msg']="验证失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}else{
$token=md5(uniqid());
$now=time();
$tranDb=new Model();
$save['mode']='1';
$save['token']=$token;
$save['online_time']=$this->getLimitTime();
$save['update_time']=$now;
$save['mac']=cookie('mac');
$save['login_time']=$now;
$arrdata['uid']=$info['id'];
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$this->getLimitTime();
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='1';
$arrdata['agent']=$this->agent;
$flag=$tranDb->table(C('DB_PREFIX').'member')->where($where)->save($save);
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag&&$flagauth){
$tranDb->commit();
cookie('token',$token);
cookie('mid',$info['id']);
$data['error']=0;
$data['url']=U("userauth/showtoken");
$this->ajaxReturn($data);
}else{
$tranDb->rollback();
$data['msg']="验证失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}
}
}
public function smsCode(){
import("ORG.Util.String");
if(IS_POST){
$this->load_shopinfo();
$phone=I('post.phone');
if(isPhone($phone)){
$userdb=D('Member');
$where['user']=$phone;
$where['routeid']=$this->shop[0]['id'];
$info=$userdb->where($where)->find();
$code=String::randString(6,'1');
if($info!=false){
}
$sdata['phone']=$phone;
$sdata['code']=$code;
session('smscode',json_encode($sdata));
$data['msg']=$code;
$data['error']=0;
$this->ajaxReturn($data);
exit;
}else{
$data['msg']="请填写有效的11位手机号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
}
}
public function mobile(){
$this->load_shopinfo();
import("ORG.Util.String");
if(empty($this->tplkey)||$this->tplkey==""||strtolower($this->tplkey)=="default"){
$this->display();
}else{
$this->display('mobile$'.$this->tplkey);
}
}
public function mobileff(){
$this->load_shopinfo();
if(empty($this->tplkey)||$this->tplkey==""||strtolower($this->tplkey)=="default"){
$this->display();
}else{
$this->display('mobileff$'.$this->tplkey);
}
}
public function smssend(){
$phone=I('post.phone');
if(!isPhone($phone)){
$data['msg']="请填写有效的11位手机号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
import("ORG.Util.String");
cookie('smscode',String::randString(6,'1'));
cookie('datatime',time());
cookie('phone88',$phone);
$data['msg']=cookie('smscode');
$data['error']=0;
$this->ajaxReturn($data);
}
public function smssendff(){
$phone=I('post.phone');
if(!isPhone($phone)){
$data['msg']="请填写有效的11位手机号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$this->load_shopinfo();
$count=$this->shop[0]['smscount'];
$wherecount['mac']=cookie('mac');
$wherecount['add_date']=getNowDate();
$wherecount['shopid']=$this->shop[0]['shopid'];
$smscount=D('smscount')->where($wherecount)->count();
if($smscount>=$count){
$data['error']=1;
$data['msg']='本日短信验证次数已超 请换其它方式验证！';
$this->ajaxReturn($data);
exit;
}
$smsdb=D('Smscfg');
$uid = $this->shop[0]['shopid'];
$where['uid']=$uid;
$info=$smsdb->where($where)->find();
if($info==false){
$data['error']=1;
$data['msg']='请先配置好短信帐号信息';
$this->ajaxReturn($data);
exit;
}
import("ORG.Util.String");
$code=String::randString(6,'1');
$msg=$this->shop[0]['duanxin'];
$arr=explode('$code',$msg);
$msg=$arr[0].$code.$arr[1];
$smsapi = "api.smsbao.com";
$charset = "utf8";
$user = "$info[user]";
$pass = md5($info[password]);
include_once("./Data/snoopy.php");
$snoopy = new snoopy();
$sendurl = "http://{$smsapi}/sms?u={$user}&p={$pass}&m={$phone}&c=".urlencode($msg);
$snoopy->fetch($sendurl);
$result = $snoopy->results;
if($result==0){$date['shopid']=$this->shop[0]['shopid'];
$date['mac']=cookie('mac');
$date['phone']=$phone;
$date['add_date']=getNowDate();
$date['add_time']=time();
$date['smscode']=$code;
D('smscount')->add($date);
$data['error']=0;
$data['msg']='验证码已发送至您的手机号！有效期3分钟!';
$this->ajaxReturn($data);
}else{
$data['error']=1;
$data['msg']=$this->getsmsstate($result);
$this->ajaxReturn($data);
}
}
public function smssendtelzhu(){
$phone=I('post.phone');
if(!isPhone($phone)){
$data['msg']="请填写有效的11位手机号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$this->load_shopinfo();
$duanxin=substr($this->shopinfo[0]['authmode'],-1);
if($duanxin==0)
{
import("ORG.Util.String");
cookie('smscode',String::randString(6,'1'));
cookie('datatime',time());
cookie('phone88',$phone);
$data['msg']=cookie('smscode');
$data['error']=0;
$data['info']=0;
$this->ajaxReturn($data);
}else{
$count=$this->shop[0]['smscount'];
$wherecount['mac']=cookie('mac');
$wherecount['add_date']=getNowDate();
$wherecount['shopid']=$this->shop[0]['shopid'];
$smscount=D('smscount')->where($wherecount)->count();
if($smscount>=$count){
$data['error']=1;
$data['msg']='本日短信验证次数已超 请换其它方式验证！';
$this->ajaxReturn($data);
exit;
}
$smsdb=D('Smscfg');
$uid = $this->shop[0]['shopid'];
$where['uid']=$uid;
$info=$smsdb->where($where)->find();
if($info==false){
$data['error']=1;
$data['msg']='请先配置好短信帐号信息';
$this->ajaxReturn($data);
exit;
}
import("ORG.Util.String");
$code=String::randString(6,'1');
$msg=$this->shop[0]['duanxin'];
$arr=explode('$code',$msg);
$msg=$arr[0].$code.$arr[1];
$smsapi = "api.smsbao.com";
$charset = "utf8";
$user = "$info[user]";
$pass = md5($info[password]);
include_once("./Data/snoopy.php");
$snoopy = new snoopy();
$sendurl = "http://{$smsapi}/sms?u={$user}&p={$pass}&m={$phone}&c=".urlencode($msg);
$snoopy->fetch($sendurl);
$result = $snoopy->results;
if($result==0){$date['shopid']=$this->shop[0]['shopid'];
$date['mac']=cookie('mac');
$date['phone']=$phone;
$date['add_date']=getNowDate();
$date['add_time']=time();
$date['smscode']=$code;
D('smscount')->add($date);
$data['error']=0;
$data['msg']='验证码已发送至您的手机号！有效期3分钟!';
$data['info']=1;
$this->ajaxReturn($data);
}else{
$data['error']=1;
$data['msg']=$this->getsmsstate($result);
$this->ajaxReturn($data);
}
}
}
private function getsmsstate($rs){
switch ($rs){
case 30:
return "密码错误";
case 40:
return "账号不存在";
case -41:
return "余额不足";
case -42:
return "帐号过期";
case -43:
return "IP地址限制";
case -50:
return "内容含有敏感词";
case -51:
return "手机号码不正确";
default:
return '短信提交失败';
}
}
public function dologin(){
import("ORG.Util.String");
$this->load_shopinfo();
if(IS_POST){
$db=D('Member');
$user=I('post.user');
$pwd=I('post.password');
if(empty($user)||empty($pwd)||$user==""||$pwd==""){
$data['msg']="提交参数不完整，登录失败";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if(!validate_user($user)){
$data['msg']="用户名不合法";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$where['user']=$user;
$info=$db->where($where)->find();
if($info==false){
$data['msg']="用户名不存在";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}else{
if($info['password']!=md5($pwd)){
$data['msg']="用户名密码不正确";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$token=md5(uniqid());
$tranDb=new Model();
$save['token']=$token;
$save['browser']=$this->browser;
$save['online_time']=$this->getLimitTime();
$save['update_time']=$now;
$save['login_time']=$now;
$save['mode']='0';
$save['mac']=cookie('mac');
$arrdata['uid']=$info['id'];
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$this->getLimitTime();
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='0';
$arrdata['agent']=$this->agent;
$flag=$tranDb->table(C('DB_PREFIX').'member')->where($where)->save($save);
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag&&$flagauth){
$tranDb->commit();
cookie('token',$token);
cookie('mid',$info['id']);
$data['error']=0;
$data['url']=U("userauth/showtoken");
$this->ajaxReturn($data);
}else{
$tranDb->rollback();
$data['msg']="登录失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}
}
}
public function regu(){
$this->load_shopinfo();
if(IS_POST){
$user=I('post.user');
$pwd=I('post.password');
$phone=I('post.phone');
$qq=I('post.qq');
$yzm=I('post.yzm');
if(!validate_user($user)){
$data['msg']="用户名必须是3到20位数字或字母组成";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if(!isPhone($phone)){
$data['msg']="请填写有效的11位手机号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if(!isQQ($qq)){
$data['msg']="请填写有效的QQ号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if($yzm==""||!isSmsCode($yzm)){
$data['msg']="验证码不正确";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$duanxin=substr($this->shopinfo[0]['authmode'],-1);
if($duanxin==0){
$se=cookie('smscode');
$datatime=cookie('datatime');
$nowtime=time();
$phonecookie=cookie('phone88');
if(($nowtime-$datatime>180)){$data['msg']="验证码已过期，请重新获取！";
$data['error']=1;
$this->ajaxReturn($data);
exit;}
if($phonecookie!=$phone){
$data['msg']="请输入接收到验证码的手机号!";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if(empty($se)){
$data['msg']="验证码已过期，请重新获取！";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if($se!=$yzm){
$data['msg']="验证码不正确,请重新输入";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
}else{
$whereuser['shopid']=$this->shop[0]['shopid'];
$whereuser['add_date']=getNowDate();
$whereuser['mac']=cookie('mac');
$resu=D('smscount')->where($whereuser)->order('add_time desc')->find();
if($resu){
if((time()-$resu['add_time']>180)){
$data['msg']="验证码已过期，请重新获取！";
$data['error']=1;
$this->ajaxReturn($data);
exit;}
if($phone!=$resu['phone']){
$data['msg']="请输入接收到验证码的手机号!";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
if($resu['smscode']!=$yzm){
$data['msg']="验证码不正确,请重新输入";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
}else{
$data['msg']="验证失败，请重新获取验证码！";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
}
$db=D('Member');
$where['user']=$user;
$where['routeid']=$this->shop[0]['id'];
$info=$db->where($where)->find();
if($info!=false){
$data['msg']="当前帐号已存在";
$data['error']=1;
$this->ajaxReturn($data);
}
$token=md5(uniqid());
$now=time();
$tranDb=new Model();
$_POST['token']=$token;
unset($_POST['__hash__']);
unset($_POST['smscode']);
unset($_POST['yzm']);
$_POST['password']=md5($_POST['password']);
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['browser']=$this->browser;
$_POST['mac']=cookie('mac');
$_POST['mode']='0';
$_POST['add_time']=$now;
$_POST['update_time']=$now;
$_POST['login_time']=$now;
$_POST['add_date']=getNowDate();
$_POST['online_time']=$this->getLimitTime();
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$this->getLimitTime();
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='0';
$arrdata['agent']=$this->agent;
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag&&$flagauth){
$tranDb->commit();
cookie('token',$_POST['token']);
cookie('mid',$newid);
$data['error']=0;
$data['url']=U("userauth/showtoken");
$this->ajaxReturn($data);
}else{
$tranDb->rollback();
Log::write("注册认证错误:".$tranDb->getLastSql());
$data['msg']="注册失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}
}
public function showtoken(){
$this->load_shopinfo();
$url="http://".cookie('gw_address').":".cookie('gw_port')."/wifidog/auth?token=".cookie('token');
$jump=U('User/index');
$wait=C('WAITSECONDS');
$open=C('OPENPUSH');
$way=C('SHOWWAY');
$pid=$this->shop[0]['pid'];
$agentpush=false;
if(empty($pid)||$pid<=0){
$wait=C('WAITSECONDS');
}else{
$adset=D('Agentpushset');
$awhere['aid']=$pid;
$adinfo=$adset->where($awhere)->find();
if($adinfo==false){
}else{
if($adinfo['pushflag']==1){
$agentpush=true;
}
if($way==1){
$wait=$adinfo['showtime'];
}
}
}
if($open==1){
$where['state']=1;
$where['startdate']= array('elt',time());
$where['enddate']= array('egt',time());
if($agentpush){
$where['aid']=array('in','0,'.$pid);
}else{
$where['aid']=0;
}
$trade=$this->shop[0]['trade'];
$where['trade']= array('like','%'.$trade.'%');
$wherept['showcount']=array('eq','1');
$wherept['state']=1;
$wherept['aid']=$where['aid'];
$wherept['startdate']= array('elt',time());
$wherept['enddate']= array('egt',time());
$wherept['trade']= array('like','%'.$trade.'%');
$adsone=D('Pushadv')->where($wherept)->order('RAND()')->limit(1)->field("id,pic,aid")->select();
if(empty($adsone)){$adsone=D('Pushadv')->where($where)->order('RAND()')->limit(1)->field("id,pic,aid")->select();}
$where['id']=array('neq',$adsone[0]['id']);
$ads=D('Pushadv')->where($where)->order('RAND()')->limit(10)->field("id,pic,aid")->select();
$tr=new Model();
$time=time();
$tr->startTrans();
$arrdata['showup']=1;
$arrdata['hit']=0;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['add_time']=$time;
$arrdata['add_date']=getNowDate();
foreach($ads as $k=>$v){
if($v['aid']>0){
$arrdata['mode']=50;
$arrdata['agent']=$v['aid'];
}else{
$arrdata['mode']=99;
$arrdata['agent']=0;
}
$arrdata['aid']=$v['id'];
$tr->table(C('DB_PREFIX')."adcount")->add($arrdata);
}
if($adsone[0]['aid']>0){
$arrdata['mode']=50;
$arrdata['agent']=$adsone[0]['aid'];
}else{
$arrdata['mode']=99;
$arrdata['agent']=0;
}
$arrdata['aid']=$adsone['id'];
$tr->table(C('DB_PREFIX')."adcount")->add($arrdata);
$tr->commit();
$this->assign('adsone',$adsone[0]);
$this->assign('ad',$ads);
}
$this->assign('waitsecond',$wait);
$this->assign('wifiurl',$url);
$this->assign('jumpurl',$jump);
if(empty($this->tplkey)||$this->tplkey==""||strtolower($this->tplkey)=="default"){
$this->display();
}else{
$this->display("showtoken$".$this->tplkey);
}
}
public function reg(){
$this->load_shopinfo();
if(empty($this->tplkey)||$this->tplkey==""||strtolower($this->tplkey)=="default"){
$this->display();
}else{
$this->display("reg$".$this->tplkey);
}
}
public function regff(){
$this->display();
}
public function comments(){
$this->load_shopinfo();
$this->display('comments$wifiadv2');
}
private  function getLimitTime(){
if($this->shop[0]['timelimit']!=""&&$this->shop[0]['timelimit']!="0"){
import("ORG.Util.Date");
$dt=new Date(time());
$date=$dt->dateAdd($this->shop[0]['timelimit'],'n');
return strtotime($date);
}
return "";
}
public function noAuth(){
$this->load_shopinfo();
$now=time();
$token=md5(uniqid());
$tranDb=new Model();
$_POST['user']=uniqid();
$_POST['password']=md5('123456');
$_POST['phone']='1399999999';
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['browser']=$this->browser;
$_POST['token']=$token;
$_POST['mode']='2';
$_POST['online_time']=$this->getLimitTime();
$_POST['add_time']=$now;
$_POST['update_time']=$now;
$_POST['login_time']=$now;
$_POST['mac']=cookie('mac');
$_POST['add_date']=getNowDate();
C('TOKEN_ON',false);
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$this->getLimitTime();
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='2';
$arrdata['agent']=$this->agent;
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag&&$flagauth){
$tranDb->commit();
cookie('token',$_POST['token']);
cookie('mid',$newid);
$this->redirect("index.php/api/userauth/showtoken");
}else{
$tranDb->rollback();
Log::write("自动认证错误:".$tranDb->getLastSql());
$this->error('服务器异常，请稍候再试');
}
}
public function noAuthwhite(){
$this->load_shopinfo();
$now=time();
$token=md5(uniqid());
$tranDb=new Model();
$_POST['user']=uniqid();
$_POST['password']=md5('123456');
$_POST['phone']='1399999999';
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['browser']=$this->browser;
$_POST['token']=$token;
$_POST['mode']='2';
$_POST['online_time']='0';
$_POST['add_time']=$now;
$_POST['update_time']=$now;
$_POST['login_time']=$now;
$_POST['mac']=cookie('mac');
$_POST['add_date']=getNowDate();
C('TOKEN_ON',false);
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']='0';
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='2';
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag&&$flagauth){
$tranDb->commit();
cookie('token',$_POST['token']);
cookie('mid',$newid);
$this->redirect("index.php/api/userauth/showtoken");
}else{
$tranDb->rollback();
Log::write("自动认证错误:".$tranDb->getLastSql());
$this->error('服务器异常，请稍候再试');
}
}
public function wxyj(){
$this->load_shopinfo();
$now=time();
$token=md5(uniqid());
$tranDb=new Model();
$_POST['user']=uniqid();
$_POST['password']=md5('123456');
$_POST['phone']='13888888888';
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
$_POST['browser']=$this->browser;
$_POST['token']=$token;
$_POST['mode']='3';
$_POST['online_time']=$this->getLimitTime();
$_POST['add_time']=$now;
$_POST['update_time']=$now;
$_POST['login_time']=$now;
$_POST['mac']=cookie('mac');
$_POST['add_date']=getNowDate();
C('TOKEN_ON',false);
$tranDb->startTrans();
$flag=$tranDb->table(C('DB_PREFIX').'member')->add($_POST);
$newid=$tranDb->getLastInsID();
$arrdata['uid']=$newid;
$arrdata['add_date']=getNowDate();
$arrdata['over_time']=$this->getLimitTime();
$arrdata['update_time']=$now;
$arrdata['login_time']=$now;
$arrdata['last_time']=$now;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['routeid']=$this->shop[0]['id'];
$arrdata['browser']=$this->browser;
$arrdata['token']=$token;
$arrdata['mode']='3';
$flagauth=$tranDb->table(C('DB_PREFIX').'authlist')->add($arrdata);
if($flag and $flagauth){
$tranDb->commit();
cookie('token',$_POST['token']);
cookie('mid',$newid);
$this->redirect("index.php/api/userauth/showtoken");
}else{
$tranDb->rollback();
Log::write("自动认证错误:".$tranDb->getLastSql());
$this->error('服务器异常，请稍候再试');
}
}
public function addmsg(){
$this->load_shopinfo();
if(IS_POST){
$user=I('post.user');
$phone=I('post.phone');
$info=I('post.content');
if(!isPhone($phone)){
$data['msg']="请填写有效的11位手机号码";
$data['error']=1;
$this->ajaxReturn($data);
exit;
}
$db=D('Comment');
$_POST['shopid']=$this->shop[0]['shopid'];
$_POST['routeid']=$this->shop[0]['id'];
if($db->create()){
if($db->add()){
$newid=$db->getLastInsID();
$data['error']=0;
$this->ajaxReturn($data);
}else{
$data['msg']="提交留言失败，请稍候再试";
$data['error']=1;
$this->ajaxReturn($data);
}
}else{
$data['msg']=$db->getError();
$data['error']=1;
$this->ajaxReturn($data);
}
}
}
public function showad(){
$this->load_shopinfo();
$id=I('get.id','0','int');
$db=D('Ad');
$where['id']=$id;
$where['uid']=I('get.uid');
$info=$db->where($where)->find();
$where1['uid']=I('get.uid');
$allgg=$db->where($where1)->order('ad_sort ASC')->select();
$tr=new Model();
$time=time();
$tr->startTrans();
$arrdata['showup']=0;
$arrdata['hit']=1;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['add_time']=$time;
$arrdata['add_date']=getNowDate();
$arrdata['mode']=1;
$arrdata['aid']=$id;
$tr->table(C('DB_PREFIX')."adcount")->add($arrdata);
$tr->commit();
$tr=new Model();
$time=time();
$tr->startTrans();
$arrdata['showup']=1;
$arrdata['hit']=0;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['add_time']=$time;
$arrdata['add_date']=getNowDate();
$arrdata['mode']=1;
foreach($allgg as $k=>$v){
$arrdata['aid']=$v['id'];
$tr->table(C('DB_PREFIX')."adcount")->add($arrdata);
}
$tr->commit();
$this->assign('adinfo',$info);
$this->assign('allgg',$allgg);
$this->display();
}
public function showdlgg(){
$this->load_shopinfo();
$id=I('get.id','0','int');
$db=D('Pushadv');
$where['id']=$id;
$info=$db->where($where)->find();
$pid=$this->shop[0]['pid'];
$adset=D('Agentpushset');
$awhere['aid']=$pid;
$agentinfo=$adset->where($awhere)->find();
if($agentinfo['pushflag']==1){
$where1['aid']=array('in','0,'.$pid);
}else{
$where1['aid']=0;
}
$where1['state']=1;
$where1['startdate']= array('elt',time());
$where1['enddate']= array('egt',time());
$trade=$this->shop[0]['trade'];
$where1['trade']= array('like','%'.$trade.'%');
$alldlgg=$db->where($where1)->order('RAND()')->limit(10)->select();
$tr=new Model();
$time=time();
$tr->startTrans();
$arrdata['showup']=0;
$arrdata['hit']=1;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['add_time']=$time;
$arrdata['add_date']=getNowDate();
if($info['aid']>0){
$arrdata['mode']=50;
$arrdata['agent']=$info['aid'];
}else{
$arrdata['mode']=99;
$arrdata['agent']=0;
}
$arrdata['aid']=$info['id'];
$tr->table(C('DB_PREFIX')."adcount")->add($arrdata);
$tr->commit();
$tr=new Model();
$time=time();
$tr->startTrans();
$arrdata['showup']=1;
$arrdata['hit']=0;
$arrdata['shopid']=$this->shop[0]['shopid'];
$arrdata['add_time']=$time;
$arrdata['add_date']=getNowDate();
foreach($alldlgg as $k=>$v){
if($v['aid']>0){
$arrdata['mode']=50;
$arrdata['agent']=$v['aid'];
}else{
$arrdata['mode']=99;
$arrdata['agent']=0;
}
$arrdata['aid']=$v['id'];
$tr->table(C('DB_PREFIX')."adcount")->add($arrdata);
}
$tr->commit();
$this->assign('adinfo',$info);
$this->assign('alldlgg',$alldlgg);
$this->display();
}
}
?>